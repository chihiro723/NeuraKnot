// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/texts": {
            "get": {
                "description": "保存されているすべてのテキストを取得します（リアルタイム更新テスト）よーー",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "texts"
                ],
                "summary": "テキスト一覧を取得",
                "responses": {
                    "200": {
                        "description": "テキスト一覧",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.TextResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "POSTでテキストを受け取ってデータベースに保存します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "texts"
                ],
                "summary": "テキストを作成",
                "parameters": [
                    {
                        "description": "テキスト作成リクエスト",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateTextRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "作成されたテキスト",
                        "schema": {
                            "$ref": "#/definitions/handler.TextResponse"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/texts/{id}": {
            "get": {
                "description": "指定されたIDのテキストを取得します",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "texts"
                ],
                "summary": "テキストを取得",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "テキストID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "テキスト",
                        "schema": {
                            "$ref": "#/definitions/handler.TextResponse"
                        }
                    },
                    "400": {
                        "description": "無効なID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "テキストが見つからない",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "指定されたIDのテキストを更新します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "texts"
                ],
                "summary": "テキストを更新",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "テキストID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "テキスト更新リクエスト",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateTextRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "更新されたテキスト",
                        "schema": {
                            "$ref": "#/definitions/handler.TextResponse"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "テキストが見つからない",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "指定されたIDのテキストを削除します",
                "tags": [
                    "texts"
                ],
                "summary": "テキストを削除",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "テキストID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "削除成功"
                    },
                    "400": {
                        "description": "無効なID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "テキストが見つからない",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.CreateTextRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "example": "これは保存したいテキストです"
                },
                "title": {
                    "type": "string",
                    "example": "テキストのタイトル"
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "エラーメッセージ"
                },
                "message": {
                    "type": "string",
                    "example": "詳細なエラーメッセージ"
                }
            }
        },
        "handler.TextResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "これは保存したいテキストです"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "テキストのタイトル"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                }
            }
        },
        "handler.UpdateTextRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "更新されたテキストです"
                },
                "title": {
                    "type": "string",
                    "example": "更新されたタイトル"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Go Backend API",
	Description:      "DDDアーキテクチャを使用したGoバックエンドAPI",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
