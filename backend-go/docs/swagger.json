{
    "swagger": "2.0",
    "info": {
        "description": "BridgeSpeak AI分身チャットアプリケーションのAPI",
        "title": "BridgeSpeak API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/ai-agents": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ユーザーのAI Agentリストを取得します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI Agent"
                ],
                "summary": "AI Agentリスト取得",
                "responses": {
                    "200": {
                        "description": "取得成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.AgentsResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "新しいAI Agentを作成します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI Agent"
                ],
                "summary": "AI Agent作成",
                "parameters": [
                    {
                        "description": "AI Agent作成情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_request.CreateAgentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "作成成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.AgentResponse"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/ai-agents/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "IDでAI Agentを取得します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI Agent"
                ],
                "summary": "AI Agent取得",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AI Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "取得成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.AgentResponse"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "AI Agentが見つかりません",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/conversations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ユーザーの会話一覧を取得します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "会話一覧取得",
                "responses": {
                    "200": {
                        "description": "取得成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ConversationsListResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "AI Agentとの会話を取得または作成します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "会話取得/作成",
                "parameters": [
                    {
                        "description": "AI Agent ID",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_request.GetOrCreateConversationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "取得/作成成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ConversationResponse"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/conversations/{conversation_id}/messages/{message_id}/tools/positions": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ツール使用履歴の挿入位置を一括更新します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "ツール位置情報更新",
                "parameters": [
                    {
                        "type": "string",
                        "description": "会話ID",
                        "name": "conversation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "メッセージID",
                        "name": "message_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ツール位置情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_request.UpdateToolPositionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "更新成功",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "会話またはメッセージが見つからない",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/conversations/{id}/messages": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "会話のメッセージ履歴を取得します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "メッセージ履歴取得",
                "parameters": [
                    {
                        "type": "string",
                        "description": "会話ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "取得件数（デフォルト: 50）",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "取得成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.MessagesResponse"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "会話にメッセージを送信してAI応答を取得します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "メッセージ送信",
                "parameters": [
                    {
                        "type": "string",
                        "description": "会話ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "メッセージ内容",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_request.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "送信成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.SendMessageResponse"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/conversations/{id}/messages/stream": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "会話にメッセージを送信してAI応答をストリーミングで取得します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "メッセージ送信（ストリーミング）",
                "parameters": [
                    {
                        "type": "string",
                        "description": "会話ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "メッセージ内容",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_request.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SSEストリーム",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/mcp-servers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ユーザーがアクセス可能なMCPサーバー一覧を取得します（システム共通 + ユーザー登録）",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCP"
                ],
                "summary": "MCPサーバー一覧を取得",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/backend-go_internal_domain_mcp.MCPServer"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ユーザーが外部MCPサーバーを登録します。APIキーは暗号化されてDBに保存されます。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCP"
                ],
                "summary": "MCPサーバーを登録",
                "parameters": [
                    {
                        "description": "登録情報",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_domain_mcp.RegisterMCPServerInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_domain_mcp.MCPServer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/mcp-servers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "指定されたIDのMCPサーバーを取得します",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCP"
                ],
                "summary": "MCPサーバーを取得",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_domain_mcp.MCPServer"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "MCPサーバーの情報を更新します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCP"
                ],
                "summary": "MCPサーバーを更新",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "更新情報",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_domain_mcp.UpdateMCPServerInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_domain_mcp.MCPServer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "MCPサーバーを削除します",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCP"
                ],
                "summary": "MCPサーバーを削除",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/mcp-servers/{id}/sync": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "MCPサーバーからツールカタログを取得して同期します",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCP"
                ],
                "summary": "ツールカタログを同期",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/mcp-servers/{id}/tools": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "指定されたMCPサーバーのツール一覧を取得します",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCP"
                ],
                "summary": "サーバーのツール一覧を取得",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/backend-go_internal_domain_mcp.MCPTool"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/mcp-tools/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "カテゴリ、タグ、キーワードでツールを検索します",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MCP"
                ],
                "summary": "ツールを検索",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Tags (comma-separated)",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/backend-go_internal_domain_mcp.MCPTool"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handler_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/confirm-forgot-password": {
            "post": {
                "description": "確認コードを使って新しいパスワードを設定します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "パスワードリセット確認",
                "parameters": [
                    {
                        "description": "パスワードリセット情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_request.ConfirmForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "リセット成功",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/confirm-signup": {
            "post": {
                "description": "メールで送信された確認コードを使ってユーザー登録を確認します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "ユーザー登録確認",
                "parameters": [
                    {
                        "description": "確認コード",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_request.ConfirmSignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "確認成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "description": "パスワードリセット用の確認コードをメールで送信します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "パスワードリセット要求",
                "parameters": [
                    {
                        "description": "ユーザー名",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_request.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "メール送信成功",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Cookieからリフレッシュトークンを取得して新しいアクセストークンを発行します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "トークンリフレッシュ",
                "responses": {
                    "200": {
                        "description": "トークンリフレッシュ成功（新しいトークンはCookieに保存）",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.MessageResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "ユーザー名とパスワードでログインします",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "ユーザーログイン",
                "parameters": [
                    {
                        "description": "ログイン情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_request.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ログイン成功（トークンはCookieに保存）",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.AuthResultResponse"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signout": {
            "post": {
                "description": "ユーザーをログアウトします（グローバルサインアウト、Cookieをクリア）",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "ログアウト",
                "responses": {
                    "200": {
                        "description": "ログアウト成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "新規ユーザーを登録します。登録後に確認コードがメールで送信されます。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "ユーザー登録",
                "parameters": [
                    {
                        "description": "ユーザー登録情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_request.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "登録成功（トークンはCookieに保存）",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.AuthResultResponse"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ユーザーの一覧を取得します（ページネーション対応）",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "ユーザー一覧取得",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "取得件数（デフォルト: 10）",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "オフセット（デフォルト: 0）",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ユーザー一覧取得成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.UsersResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/email": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "認証済みユーザーのメールアドレスを変更します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "メールアドレス変更",
                "parameters": [
                    {
                        "description": "新しいメールアドレス",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_request.ChangeEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "変更成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.UserResponse"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "認証済みユーザーの自分のプロフィールを取得します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "プロフィール取得",
                "responses": {
                    "200": {
                        "description": "プロフィール取得成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.UserResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "認証済みユーザーの表示名を更新します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "プロフィール更新",
                "parameters": [
                    {
                        "description": "更新情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_request.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "更新成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.UserResponse"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "指定されたIDのユーザー情報を取得します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "ユーザーをIDで取得",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ユーザーID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ユーザー取得成功",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.UserResponse"
                        }
                    },
                    "400": {
                        "description": "バリデーションエラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "認証エラー",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ユーザーが見つかりません",
                        "schema": {
                            "$ref": "#/definitions/backend-go_internal_handler_http_response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "backend-go_internal_domain_mcp.AuthType": {
            "type": "string",
            "enum": [
                "bearer",
                "api_key",
                "custom"
            ],
            "x-enum-comments": {
                "AuthTypeAPIKey": "API Key",
                "AuthTypeBearer": "Bearer Token",
                "AuthTypeCustom": "カスタムヘッダー"
            },
            "x-enum-varnames": [
                "AuthTypeBearer",
                "AuthTypeAPIKey",
                "AuthTypeCustom"
            ]
        },
        "backend-go_internal_domain_mcp.MCPServer": {
            "type": "object",
            "properties": {
                "auth_type": {
                    "$ref": "#/definitions/backend-go_internal_domain_mcp.AuthType"
                },
                "base_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "custom_headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "last_synced_at": {
                    "type": "string"
                },
                "last_used_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "requires_auth": {
                    "type": "boolean"
                },
                "server_type": {
                    "$ref": "#/definitions/backend-go_internal_domain_mcp.ServerType"
                },
                "tools_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "description": "NULL = システム共通",
                    "type": "string"
                }
            }
        },
        "backend-go_internal_domain_mcp.MCPTool": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "input_schema": {
                    "type": "object",
                    "additionalProperties": true
                },
                "mcp_server_id": {
                    "type": "string"
                },
                "synced_at": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tool_description": {
                    "type": "string"
                },
                "tool_name": {
                    "type": "string"
                },
                "usage_count": {
                    "type": "integer"
                }
            }
        },
        "backend-go_internal_domain_mcp.RegisterMCPServerInput": {
            "type": "object",
            "required": [
                "base_url",
                "name"
            ],
            "properties": {
                "api_key": {
                    "description": "平文で受け取る",
                    "type": "string",
                    "maxLength": 500
                },
                "auth_type": {
                    "$ref": "#/definitions/backend-go_internal_domain_mcp.AuthType"
                },
                "base_url": {
                    "type": "string"
                },
                "custom_headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "requires_auth": {
                    "type": "boolean"
                }
            }
        },
        "backend-go_internal_domain_mcp.ServerType": {
            "type": "string",
            "enum": [
                "built_in",
                "external"
            ],
            "x-enum-comments": {
                "ServerTypeBuiltIn": "システム組み込み",
                "ServerTypeExternal": "ユーザー登録"
            },
            "x-enum-varnames": [
                "ServerTypeBuiltIn",
                "ServerTypeExternal"
            ]
        },
        "backend-go_internal_domain_mcp.UpdateMCPServerInput": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string",
                    "maxLength": 500
                },
                "auth_type": {
                    "$ref": "#/definitions/backend-go_internal_domain_mcp.AuthType"
                },
                "base_url": {
                    "type": "string"
                },
                "custom_headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "requires_auth": {
                    "type": "boolean"
                }
            }
        },
        "backend-go_internal_handler_http_request.ChangeEmailRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "backend-go_internal_handler_http_request.ConfirmForgotPasswordRequest": {
            "type": "object",
            "required": [
                "confirmation_code",
                "email",
                "new_password"
            ],
            "properties": {
                "confirmation_code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "backend-go_internal_handler_http_request.ConfirmSignUpRequest": {
            "type": "object",
            "required": [
                "confirmation_code",
                "email"
            ],
            "properties": {
                "confirmation_code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "backend-go_internal_handler_http_request.CreateAgentRequest": {
            "type": "object",
            "required": [
                "name",
                "persona_type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "persona_type": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "streaming_enabled": {
                    "description": "nilの場合はtrueがデフォルト",
                    "type": "boolean"
                }
            }
        },
        "backend-go_internal_handler_http_request.ForgotPasswordRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "backend-go_internal_handler_http_request.GetOrCreateConversationRequest": {
            "type": "object",
            "required": [
                "ai_agent_id"
            ],
            "properties": {
                "ai_agent_id": {
                    "type": "string"
                }
            }
        },
        "backend-go_internal_handler_http_request.SendMessageRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "backend-go_internal_handler_http_request.SignInRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "backend-go_internal_handler_http_request.SignUpRequest": {
            "type": "object",
            "required": [
                "display_name",
                "email",
                "password"
            ],
            "properties": {
                "display_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "backend-go_internal_handler_http_request.UpdateProfileRequest": {
            "type": "object",
            "required": [
                "display_name"
            ],
            "properties": {
                "display_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "backend-go_internal_handler_http_request.UpdateToolPositionsRequest": {
            "type": "object",
            "required": [
                "positions"
            ],
            "properties": {
                "positions": {
                    "description": "ToolUsageID -\u003e InsertPosition",
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "backend-go_internal_handler_http_response.AgentResponse": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_chat_at": {
                    "type": "string"
                },
                "max_tokens": {
                    "type": "integer"
                },
                "message_count": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "persona_type": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "system_prompt": {
                    "type": "string"
                },
                "temperature": {
                    "type": "number"
                },
                "tools_enabled": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "backend-go_internal_handler_http_response.AgentsResponse": {
            "type": "object",
            "properties": {
                "agents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/backend-go_internal_handler_http_response.AgentResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "backend-go_internal_handler_http_response.AuthResultResponse": {
            "type": "object",
            "properties": {
                "expires_in": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/backend-go_internal_handler_http_response.UserResponse"
                }
            }
        },
        "backend-go_internal_handler_http_response.ConversationResponse": {
            "type": "object",
            "properties": {
                "ai_agent_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_message_at": {
                    "type": "string"
                },
                "message_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "backend-go_internal_handler_http_response.ConversationWithDetailsResponse": {
            "type": "object",
            "properties": {
                "ai_agent_avatar": {
                    "type": "string"
                },
                "ai_agent_id": {
                    "type": "string"
                },
                "ai_agent_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_message": {
                    "$ref": "#/definitions/backend-go_internal_handler_http_response.MessageResponse"
                },
                "message_count": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "backend-go_internal_handler_http_response.ConversationsListResponse": {
            "type": "object",
            "properties": {
                "conversations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/backend-go_internal_handler_http_response.ConversationWithDetailsResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "backend-go_internal_handler_http_response.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "backend-go_internal_handler_http_response.MessageResponse": {
            "type": "object",
            "properties": {
                "ai_session_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "conversation_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "string"
                },
                "sender_type": {
                    "type": "string"
                },
                "tool_usages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/backend-go_internal_handler_http_response.ToolUsageResponse"
                    }
                }
            }
        },
        "backend-go_internal_handler_http_response.MessagesResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/backend-go_internal_handler_http_response.MessageResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "backend-go_internal_handler_http_response.SendMessageResponse": {
            "type": "object",
            "properties": {
                "ai_message": {
                    "$ref": "#/definitions/backend-go_internal_handler_http_response.MessageResponse"
                },
                "metadata": {},
                "user_message": {
                    "$ref": "#/definitions/backend-go_internal_handler_http_response.MessageResponse"
                }
            }
        },
        "backend-go_internal_handler_http_response.ToolUsageResponse": {
            "type": "object",
            "properties": {
                "error_message": {
                    "type": "string"
                },
                "executed_at": {
                    "type": "string"
                },
                "execution_time_ms": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "input_data": {
                    "type": "string"
                },
                "insert_position": {
                    "type": "integer"
                },
                "output_data": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tool_category": {
                    "type": "string"
                },
                "tool_name": {
                    "type": "string"
                }
            }
        },
        "backend-go_internal_handler_http_response.UserResponse": {
            "type": "object",
            "properties": {
                "cognito_user_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "backend-go_internal_handler_http_response.UsersResponse": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/backend-go_internal_handler_http_response.UserResponse"
                    }
                }
            }
        },
        "internal_handler_http.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}