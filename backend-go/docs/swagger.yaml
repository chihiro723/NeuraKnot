basePath: /api/v1
definitions:
  backend-go_internal_handler_http_request.ChangeEmailRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  backend-go_internal_handler_http_request.ConfirmForgotPasswordRequest:
    properties:
      confirmation_code:
        type: string
      email:
        type: string
      new_password:
        minLength: 8
        type: string
    required:
    - confirmation_code
    - email
    - new_password
    type: object
  backend-go_internal_handler_http_request.ConfirmSignUpRequest:
    properties:
      confirmation_code:
        type: string
      email:
        type: string
    required:
    - confirmation_code
    - email
    type: object
  backend-go_internal_handler_http_request.CreateAgentRequest:
    properties:
      description:
        type: string
      model:
        type: string
      name:
        type: string
      persona_type:
        type: string
      provider:
        type: string
      streaming_enabled:
        description: nilの場合はtrueがデフォルト
        type: boolean
    required:
    - name
    - persona_type
    type: object
  backend-go_internal_handler_http_request.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  backend-go_internal_handler_http_request.GetOrCreateConversationRequest:
    properties:
      ai_agent_id:
        type: string
    required:
    - ai_agent_id
    type: object
  backend-go_internal_handler_http_request.SendMessageRequest:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  backend-go_internal_handler_http_request.SignInRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  backend-go_internal_handler_http_request.SignUpRequest:
    properties:
      display_name:
        maxLength: 50
        minLength: 1
        type: string
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - display_name
    - email
    - password
    type: object
  backend-go_internal_handler_http_request.UpdateProfileRequest:
    properties:
      display_name:
        maxLength: 50
        minLength: 1
        type: string
    required:
    - display_name
    type: object
  backend-go_internal_handler_http_request.UpdateToolPositionsRequest:
    properties:
      positions:
        additionalProperties:
          type: integer
        description: ToolUsageID -> InsertPosition
        type: object
    required:
    - positions
    type: object
  backend-go_internal_handler_http_response.AgentResponse:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      last_chat_at:
        type: string
      max_tokens:
        type: integer
      message_count:
        type: integer
      model:
        type: string
      name:
        type: string
      persona_type:
        type: string
      provider:
        type: string
      system_prompt:
        type: string
      temperature:
        type: number
      tools_enabled:
        type: boolean
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  backend-go_internal_handler_http_response.AgentsResponse:
    properties:
      agents:
        items:
          $ref: '#/definitions/backend-go_internal_handler_http_response.AgentResponse'
        type: array
      total:
        type: integer
    type: object
  backend-go_internal_handler_http_response.AuthResultResponse:
    properties:
      expires_in:
        type: integer
      user:
        $ref: '#/definitions/backend-go_internal_handler_http_response.UserResponse'
    type: object
  backend-go_internal_handler_http_response.ConversationResponse:
    properties:
      ai_agent_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      last_message_at:
        type: string
      message_count:
        type: integer
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  backend-go_internal_handler_http_response.ConversationWithDetailsResponse:
    properties:
      ai_agent_avatar:
        type: string
      ai_agent_id:
        type: string
      ai_agent_name:
        type: string
      created_at:
        type: string
      id:
        type: string
      last_message:
        $ref: '#/definitions/backend-go_internal_handler_http_response.MessageResponse'
      message_count:
        type: integer
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  backend-go_internal_handler_http_response.ConversationsListResponse:
    properties:
      conversations:
        items:
          $ref: '#/definitions/backend-go_internal_handler_http_response.ConversationWithDetailsResponse'
        type: array
      total:
        type: integer
    type: object
  backend-go_internal_handler_http_response.ErrorResponse:
    properties:
      code:
        type: integer
      error:
        type: string
      message:
        type: string
    type: object
  backend-go_internal_handler_http_response.MessageResponse:
    properties:
      ai_session_id:
        type: string
      content:
        type: string
      conversation_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      sender_id:
        type: string
      sender_type:
        type: string
      tool_usages:
        items:
          $ref: '#/definitions/backend-go_internal_handler_http_response.ToolUsageResponse'
        type: array
    type: object
  backend-go_internal_handler_http_response.MessagesResponse:
    properties:
      messages:
        items:
          $ref: '#/definitions/backend-go_internal_handler_http_response.MessageResponse'
        type: array
      total:
        type: integer
    type: object
  backend-go_internal_handler_http_response.SendMessageResponse:
    properties:
      ai_message:
        $ref: '#/definitions/backend-go_internal_handler_http_response.MessageResponse'
      metadata: {}
      user_message:
        $ref: '#/definitions/backend-go_internal_handler_http_response.MessageResponse'
    type: object
  backend-go_internal_handler_http_response.ToolUsageResponse:
    properties:
      error_message:
        type: string
      executed_at:
        type: string
      execution_time_ms:
        type: integer
      id:
        type: string
      input_data:
        type: string
      insert_position:
        type: integer
      output_data:
        type: string
      status:
        type: string
      tool_category:
        type: string
      tool_name:
        type: string
    type: object
  backend-go_internal_handler_http_response.UserResponse:
    properties:
      cognito_user_id:
        type: string
      created_at:
        type: string
      display_name:
        type: string
      email:
        type: string
      id:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  backend-go_internal_handler_http_response.UsersResponse:
    properties:
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/backend-go_internal_handler_http_response.UserResponse'
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: BridgeSpeak AI分身チャットアプリケーションのAPI
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: BridgeSpeak API
  version: "1.0"
paths:
  /api/v1/ai-agents:
    get:
      consumes:
      - application/json
      description: ユーザーのAI Agentリストを取得します
      produces:
      - application/json
      responses:
        "200":
          description: 取得成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.AgentsResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: AI Agentリスト取得
      tags:
      - AI Agent
    post:
      consumes:
      - application/json
      description: 新しいAI Agentを作成します
      parameters:
      - description: AI Agent作成情報
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend-go_internal_handler_http_request.CreateAgentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 作成成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.AgentResponse'
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: AI Agent作成
      tags:
      - AI Agent
  /api/v1/ai-agents/{id}:
    get:
      consumes:
      - application/json
      description: IDでAI Agentを取得します
      parameters:
      - description: AI Agent ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 取得成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.AgentResponse'
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "404":
          description: AI Agentが見つかりません
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: AI Agent取得
      tags:
      - AI Agent
  /api/v1/conversations:
    get:
      consumes:
      - application/json
      description: ユーザーの会話一覧を取得します
      produces:
      - application/json
      responses:
        "200":
          description: 取得成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ConversationsListResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 会話一覧取得
      tags:
      - Chat
    post:
      consumes:
      - application/json
      description: AI Agentとの会話を取得または作成します
      parameters:
      - description: AI Agent ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend-go_internal_handler_http_request.GetOrCreateConversationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 取得/作成成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ConversationResponse'
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 会話取得/作成
      tags:
      - Chat
  /api/v1/conversations/{conversation_id}/messages/{message_id}/tools/positions:
    patch:
      consumes:
      - application/json
      description: ツール使用履歴の挿入位置を一括更新します
      parameters:
      - description: 会話ID
        in: path
        name: conversation_id
        required: true
        type: string
      - description: メッセージID
        in: path
        name: message_id
        required: true
        type: string
      - description: ツール位置情報
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend-go_internal_handler_http_request.UpdateToolPositionsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "404":
          description: 会話またはメッセージが見つからない
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: ツール位置情報更新
      tags:
      - Chat
  /api/v1/conversations/{id}/messages:
    get:
      consumes:
      - application/json
      description: 会話のメッセージ履歴を取得します
      parameters:
      - description: 会話ID
        in: path
        name: id
        required: true
        type: string
      - default: 50
        description: '取得件数（デフォルト: 50）'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 取得成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.MessagesResponse'
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: メッセージ履歴取得
      tags:
      - Chat
    post:
      consumes:
      - application/json
      description: 会話にメッセージを送信してAI応答を取得します
      parameters:
      - description: 会話ID
        in: path
        name: id
        required: true
        type: string
      - description: メッセージ内容
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend-go_internal_handler_http_request.SendMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 送信成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.SendMessageResponse'
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: メッセージ送信
      tags:
      - Chat
  /api/v1/conversations/{id}/messages/stream:
    post:
      consumes:
      - application/json
      description: 会話にメッセージを送信してAI応答をストリーミングで取得します
      parameters:
      - description: 会話ID
        in: path
        name: id
        required: true
        type: string
      - description: メッセージ内容
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend-go_internal_handler_http_request.SendMessageRequest'
      produces:
      - text/event-stream
      responses:
        "200":
          description: SSEストリーム
          schema:
            type: string
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: メッセージ送信（ストリーミング）
      tags:
      - Chat
  /auth/confirm-forgot-password:
    post:
      consumes:
      - application/json
      description: 確認コードを使って新しいパスワードを設定します
      parameters:
      - description: パスワードリセット情報
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend-go_internal_handler_http_request.ConfirmForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: リセット成功
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      summary: パスワードリセット確認
      tags:
      - Auth
  /auth/confirm-signup:
    post:
      consumes:
      - application/json
      description: メールで送信された確認コードを使ってユーザー登録を確認します
      parameters:
      - description: 確認コード
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend-go_internal_handler_http_request.ConfirmSignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 確認成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.MessageResponse'
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      summary: ユーザー登録確認
      tags:
      - Auth
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: パスワードリセット用の確認コードをメールで送信します
      parameters:
      - description: ユーザー名
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend-go_internal_handler_http_request.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: メール送信成功
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      summary: パスワードリセット要求
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Cookieからリフレッシュトークンを取得して新しいアクセストークンを発行します
      produces:
      - application/json
      responses:
        "200":
          description: トークンリフレッシュ成功（新しいトークンはCookieに保存）
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.MessageResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      summary: トークンリフレッシュ
      tags:
      - Auth
  /auth/signin:
    post:
      consumes:
      - application/json
      description: ユーザー名とパスワードでログインします
      parameters:
      - description: ログイン情報
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend-go_internal_handler_http_request.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ログイン成功（トークンはCookieに保存）
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.AuthResultResponse'
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      summary: ユーザーログイン
      tags:
      - Auth
  /auth/signout:
    post:
      consumes:
      - application/json
      description: ユーザーをログアウトします（グローバルサインアウト、Cookieをクリア）
      produces:
      - application/json
      responses:
        "200":
          description: ログアウト成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.MessageResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      summary: ログアウト
      tags:
      - Auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: 新規ユーザーを登録します。登録後に確認コードがメールで送信されます。
      parameters:
      - description: ユーザー登録情報
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend-go_internal_handler_http_request.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 登録成功（トークンはCookieに保存）
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.AuthResultResponse'
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      summary: ユーザー登録
      tags:
      - Auth
  /users:
    get:
      consumes:
      - application/json
      description: ユーザーの一覧を取得します（ページネーション対応）
      parameters:
      - default: 10
        description: '取得件数（デフォルト: 10）'
        in: query
        name: limit
        type: integer
      - default: 0
        description: 'オフセット（デフォルト: 0）'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ユーザー一覧取得成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.UsersResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: ユーザー一覧取得
      tags:
      - Users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: 指定されたIDのユーザー情報を取得します
      parameters:
      - description: ユーザーID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ユーザー取得成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.UserResponse'
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "404":
          description: ユーザーが見つかりません
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: ユーザーをIDで取得
      tags:
      - Users
  /users/email:
    put:
      consumes:
      - application/json
      description: 認証済みユーザーのメールアドレスを変更します
      parameters:
      - description: 新しいメールアドレス
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend-go_internal_handler_http_request.ChangeEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 変更成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.UserResponse'
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: メールアドレス変更
      tags:
      - Users
  /users/profile:
    get:
      consumes:
      - application/json
      description: 認証済みユーザーの自分のプロフィールを取得します
      produces:
      - application/json
      responses:
        "200":
          description: プロフィール取得成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.UserResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: プロフィール取得
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: 認証済みユーザーの表示名を更新します
      parameters:
      - description: 更新情報
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend-go_internal_handler_http_request.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.UserResponse'
        "400":
          description: バリデーションエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "401":
          description: 認証エラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/backend-go_internal_handler_http_response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: プロフィール更新
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
