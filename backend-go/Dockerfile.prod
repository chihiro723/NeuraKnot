# マルチステージビルドを使用
# ビルドステージ
FROM golang:1.25-alpine AS builder

# 作業ディレクトリを設定
WORKDIR /app

# 必要なパッケージをインストール
RUN apk add --no-cache git

# go.modとgo.sumをコピー
COPY go.mod go.sum ./

# 依存関係をダウンロード
RUN go mod download

# swagコマンドをインストール
RUN go install github.com/swaggo/swag/cmd/swag@latest

# ソースコードをコピー
COPY . .

# Swaggerドキュメントを生成
RUN export PATH=$PATH:$(go env GOPATH)/bin && swag init -g cmd/main.go -o docs

# アプリケーションをビルド
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main ./cmd

# 実行ステージ
FROM alpine:latest

# セキュリティのため非rootユーザーを作成
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# 作業ディレクトリを設定
WORKDIR /app

# ビルドしたバイナリとSwaggerドキュメントをコピー
COPY --from=builder /app/main .
COPY --from=builder /app/docs ./docs

# 権限を設定
RUN chown -R appuser:appgroup /app

# ユーザーを変更
USER appuser

# ポートを公開
EXPOSE 8080

# ヘルスチェック
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# アプリケーションを実行
CMD ["./main"]
